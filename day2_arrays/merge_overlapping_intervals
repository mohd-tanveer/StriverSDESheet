class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length<=1){
            return intervals;
        }
        Arrays.sort(intervals,(array1,array2)->array1[0]-array2[0]);
        
        List<int[]> output = new ArrayList<>();
        int[] currentInterval = intervals[0];
        output.add(currentInterval);
        
        for(int[] inter : intervals){
            int currentBegin = currentInterval[0];
            int currentEnd = currentInterval[1];
            int nextBegin = inter[0];
            int nextEnd = inter[1];
            
            // if end is greater than the begening of the second pair it means
            if(currentEnd >= nextBegin){
                //so we have to update the end of the merge(1,3-->1,6)
                currentInterval[1] = Math.max(currentEnd,nextEnd);
            }else{
                //there is no merge so let's update our current intervals 
                currentInterval = inter;
                output.add(currentInterval);//add the newly added 
            }
            
            }
        
        
        return output.toArray(new int[output.size()][]);
    }
}

