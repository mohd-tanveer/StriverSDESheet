class Solution {
    // Function to convert a binary tree into its mirror tree.
    void mirror(Node node) {
        // Your code here
        if(node == null) return;
        
        traverse(node);
    }
    static void traverse(Node node){
        if(node ==null) return;
        
        Node temp = node.right;
        node.right = node.left;
        node.left  = temp;
        traverse(node.left);
        traverse(node.right);
        
        
        
    }
}


//invert_binary treee

class Solution {
    public TreeNode invertTree(TreeNode root) {
        
        if(root == null) return null;
        TreeNode node  = root;
        traverse(node);
        
        return root;
    }
    static void traverse(TreeNode node){
        if(node ==null) return;
        
        TreeNode temp = node.right;
        node.right = node.left;
        node.left  = temp;
        traverse(node.left);
        traverse(node.right);
    }
}
