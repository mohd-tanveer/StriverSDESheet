https://www.codingninjas.com/codestudio/problems/ninja-s-training_3621003?leftPanelTab=1

import java.util.*;
public class Solution {
    public static int ninjaTraining(int n, int points[][]) {

        // Write your code here..
        //initailly the prev will be -1 or 3 which is out of range
        int[][] dp = new int[n][4];
        for(int[] row: dp) Arrays.fill(row,-1);
        return solve(points,n-1,3,dp);
    }
    static int solve(int[][] points,int day,int last,int[][] dp){
        //base condition is when index reaches to 0 say first row
        if(day == 0){
            int maxi = 0;
            for(int i =0;i<=2;i++){
                if(i != last){
                    maxi = Math.max(maxi,points[0][i]);
                }
            }
            return maxi;
        }
        if(dp[day][last] != -1) return dp[day][last];
        int maxi = 0;
        for(int i = 0; i < 3; i++){
            if(i != last){
                maxi = Math.max(maxi,points[day][i]+solve(points,day-1,i,dp));
            }
        }
        return dp[day][last]=maxi;
    }

}
