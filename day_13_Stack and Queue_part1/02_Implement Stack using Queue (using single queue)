class MyStack {
    //implent using double queue .
    //only push case is different
    /*
    stepe insert into Q2,
          insert all the elements from Q1 to Q2 
          swap Q1 with Q2 
    */
    Queue<Integer> queue = new LinkedList<>();


    public MyStack() {
    }
    
    public void push(int x) {
        queue.add(x);
        for(int i = 0; i<queue.size()-1;i++){
            queue.add(queue.poll());
        }
    }
    
    public int pop() {
        return queue.poll();
    }
    
    public int top() {
        return queue.peek();
    }
    
    public boolean empty() {
        return queue.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
 
 
 //coding ninjas
 
 import java.util.*;
public class Stack {

    // Define the data members.
Queue<Integer> q;
 ;

    public Stack() {
        // Implement the Constructor
        q = new LinkedList<>();
    }



    /*----------------- Public Functions of Stack -----------------*/


    public int getSize() { 
        // Implement the getSize() function.
        return q.size();
    }

    public boolean isEmpty() {
        // Implement the isEmpty() function.
        return q.isEmpty();
    }

    public void push(int x) {
        // Implement the push(element) function.
        q.add(x);
        for(int i = 0; i<q.size()-1;i++){
            q.add(q.poll());
        }
    }

    public int pop() {
        if(!isEmpty())
            return q.poll();
        return -1;
    }
    
    public int top() {
        if(!isEmpty())
            return q.peek();
        return -1;
    }
}
