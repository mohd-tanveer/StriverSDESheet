/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 
 
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        //all the elements will go in left which are less than the root node and all the elements which are greater than root will go right 
        
        // 8, 5, 1, 7, 10, 12 
        // observe first node is alwasy root and next x elements should be in left of root node 
        // and the rest left elements are in right node
        
        // we can insert the roots every time
        TreeNode  root = null;
        for(int i = 0;i<preorder.length;i++){
            root = insert(root,preorder[i]);
        }
        
        return root;
    }
    static TreeNode insert(TreeNode node, int val ){
        if(node == null) return new TreeNode(val);
        if(val < node.val)
            node.left  = insert(node.left, val);
        else
            node.right  = insert(node.right, val);
            
        return node;
        
    }
}
