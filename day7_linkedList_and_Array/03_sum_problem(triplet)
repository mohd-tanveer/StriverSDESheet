class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        
        //approach 1 is to use 3 loop
        //approach 2 is to use hashmap(for storing the number of occurances) along with hashset(to store the result)
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            //if i and i+1 is same ignore it next time
            if(i==0 || (i>0 && nums[i]!=nums[i-1])){
            int low = i+1;
            int high = nums.length-1;
            while(low<high){
            if(nums[low]+nums[high] == -nums[i]){
                System.out.println(nums[i]+""+nums[low]+""+nums[high]);
                result.add(Arrays.asList(nums[i],nums[low],nums[high]));

                low++;
                high--;

                //to avoid duplicates
                while(low<high && nums[low]==nums[low-1]){
                    low++;
                }
                while(low<high && nums[high]==nums[high+1]){
                    high--;
                }
                
            }else if(nums[low]+nums[high]<-nums[i]){
                low++;
            }else{
                high--;
            }
            
        }
            }
        }
    
        return result;
        
    }
}
