class Solution {
    public List<Integer> majorityElement(int[] nums) {
        //store the count and accrodingly insert the data in list 
        //extended moore's algorithm says that there can not exit more than 2 element in which have more n/3 times mathematically not possible
        int n = nums.length;
        List<Integer> result= new ArrayList<>();
        int count1=0;
        int count2=0;
        int element1=-1;
        int element2=-1;
        for(int e:nums){
            if(e==element1){
                count1++;
            }else if(e==element2){
                count2++;
            }else if(count1==0){
                element1=e;
                count1=1;
            }else if(count2==0){
                element2=e;
                count2=1;
            }else{
                count1--;
                count2--;
            }
        }
        count1 = 0;
        count2 = 0;
        for (int i = 0; i < n; i++) {
          if (nums[i] == element1)
            count1++;
          else if (nums[i] == element2)
            count2++;
        }
        if(count1>Math.floor(n/3)){
            result.add(element1);
        }
        if(count2>Math.floor(n/3)){
            result.add(element2);
        }
        return result;
    }
}
