
class Solution {
    public String getPermutation(int n, int k) {
        
        String s = "";
        for(int i =1 ; i<=n ; i++){
            s+=i;
        }
        System.out.println(s.toString());
        String ans = "";
        List<String> ds  = new ArrayList<>();
        printPermutn(s, ans, ds);
        Collections.sort(ds);
        return ds.get(k-1);
    }
    
    static void printPermutn(String str, String ans, List<String> ds)
    {
 
        // If string is empty
        if (str.length() == 0) {
            //System.out.print(ans + " ");
            ds.add(ans);
            return;
        }
 
        for (int i = 0; i < str.length(); i++) {
 
            // ith character of str
            char ch = str.charAt(i);
 
            // Rest of the string after excluding
            // the ith character
            String ros = str.substring(0, i) +
                         str.substring(i + 1);
 
            // Recursive call
            printPermutn(ros, ans + ch, ds);
        }
    }
}

// timelimit will exceed 

