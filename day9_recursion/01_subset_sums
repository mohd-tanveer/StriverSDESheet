// { Driver Code Starts
//Initial Template for Java
import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            int N=sc.nextInt();
			ArrayList<Integer> arr = new ArrayList<>();
			for(int i = 0; i < N ; i++){
			    arr.add(sc.nextInt());
			}
            Solution ob = new Solution();
         
            ArrayList<Integer> ans = ob.subsetSums(arr,N);
            Collections.sort(ans);
            for(int sum : ans){
                System.out.print(sum+" ");
            }
            System.out.println();
        }  
    }
}
// } Driver Code Ends


//User function Template for Java//User function Template for Java
class Solution{
    ArrayList<Integer> subsetSums(ArrayList<Integer> arr, int N){
        // code here
        ArrayList<Integer> subsum = new ArrayList<>();
        Collections.sort(arr); //since before printing it is being sorted hence it is nor required to sort
        function(0,0,arr,N,subsum);
        return subsum;
    }
    static void function(int i,int sum , ArrayList<Integer> arr, int n , ArrayList<Integer> subsum){
        if(i==n){//as soon as the index is cross 
            subsum.add(sum);
            return; //the important is to return as soon as index crosses 
        }
        //take it 
        //sum = sum + arr.get(i);
        function(i+1,sum+arr.get(i),arr,n,subsum);
        
        //backtrack
        //sum=sum-arr.get(i);// this would usefull if we are adding separetly
        //not take it 
        function(i+1, sum, arr, n , subsum);
        
        
    }
}
