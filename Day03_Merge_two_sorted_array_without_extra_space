//check for the gap method as well

package main.java;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] array1 = br.readLine().trim().split(",");
        String[] array2 = br.readLine().trim().split(",");
        int[] array_1 = new int[array1.length];
        int[] array_2 = new int[array2.length];
        for (int i = 0; i < array1.length; i++) {
            array_1[i] = Integer.parseInt(array1[i]);
        }
        for (int i = 0; i < array2.length; i++) {
            array_2[i] = Integer.parseInt(array2[i]);
        }
        System.out.println(Arrays.toString(array_1));
        System.out.println(Arrays.toString(array_2));

        merge(array_1, array_2);
        System.out.println(Arrays.toString(array_1));
        System.out.println(Arrays.toString(array_2));

    }

    public static void merge(int[] array1, int[] array2) {
        int lengthOfArray1 = array1.length;
        int lengthOfArray2 = array2.length;
        int i = 0;
        for (i = 0; i < lengthOfArray1; i++) {
            if (array1[i] > array2[0]) {
                int temp = array1[i];
                array1[i] = array2[0];
                array2[0] = temp;

                int first = array2[0];
                int k = 0;
                for (k = 1; k < lengthOfArray2 && array2[k] < first; k++) {
                    array2[k - 1] = array2[k];
                }
                array2[k - 1] = first;
            }
        }
    }


}
