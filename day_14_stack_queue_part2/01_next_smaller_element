public class Solution {
    public ArrayList<Integer> prevSmaller(ArrayList<Integer> A) {
        //using next greater example
        Stack<Integer> stack = new Stack<>();
        ArrayList<Integer> list  = new ArrayList<>();
        for(int i = 0; i <A.size() ; i++){
            //when stack is not empty and nearest smaller element is present 
            while(!stack.isEmpty() && stack.peek() >= A.get(i)){
                stack.pop();
            }
            if(!stack.isEmpty()){ //which means lower does exist
                list.add(stack.peek());
            }else{ //stack is empty 
                    list.add(-1);
                }
            
            stack.push(A.get(i));
        }
        return list;
    } 
}
